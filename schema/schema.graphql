# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Component {
  id: ID!
  name: String!
  description: String
  color: String
}

input CreateProjectInput {
  name: String!
  key: String
}

input CreateTaskInput {
  name: String!
  description: String
  projectKey: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input GetDefaultKeyInput {
  name: String!
}

type Mutation {
  createProject(createProjectInput: CreateProjectInput!): Project!
  createTask(createTaskInput: CreateTaskInput!): Task!
  userSignIn(password: String!, name: String!): Token!
  userSignOut: Token!
}

type Project {
  id: ID!
  name: String!
  key: String!
  tasks: [Task!]!
  leadId: String
  lead: User
  createdAt: DateTime!
  updatedAt: DateTime!
  taskCount: Float!
}

type Query {
  projects: [Project!]!
  defaultProjectKey(getDefaultKeyInput: GetDefaultKeyInput!): String!
  tags: [Tag!]!
  tasks: [Task!]!
  self: User!
}

type Tag {
  id: ID!
  name: String!
  description: String
  color: String
  createdAt: DateTime!
  updatedAt: DateTime!
  tasks: [Task!]!
}

type TaggedTask {
  tagId: String!
  taskId: String!
}

type Task {
  id: String!
  sequence: Float!
  name: String!
  description: String
  projectId: String!
  project: Project!
  assignedToId: String
  assignedTo: User
  createdAt: DateTime!
  updatedAt: DateTime!
  tags: [Tag!]!
  key: String!
}

type Token {
  token: String!
}

type User {
  id: ID!
  name: String!
  projects: [Project!]!
  tasks: [Task!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}
